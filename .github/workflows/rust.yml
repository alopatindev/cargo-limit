on: [push, pull_request]

name: Continuous integration

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CI: 1
  RUSTFLAGS: "-D warnings -W bare-trait-objects"
  RUSTUP_MAX_RETRIES: 10
  NIGHTLY_VERSION: "nightly-2023-02-09"

jobs:
  all:
    name: Build on ${{ matrix.os }}, ${{ matrix.target }} (audit=${{ matrix.audit || 'false' }}, rustfmt=${{ matrix.rustfmt || 'false' }}, no_test=${{ matrix.no_test || 'false' }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # GNU/Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            audit: true
            rustfmt: true
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
            no_test: true # NOTE: Bad CPU type in executable (os error 86)

          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update
          rustup target add ${{ matrix.target }}
          rustup install $(cat rust-toolchain)-${{ matrix.target }}
          rustup default $(cat rust-toolchain)-${{ matrix.target }}
          rustup component add clippy rust-src
      - name: Install Nightly and Rustfmt
        if: ${{ matrix.rustfmt == true }}
        run: |
          rustup install "${NIGHTLY_VERSION}"
          rustup component add --toolchain "${NIGHTLY_VERSION}" rustfmt
      - name: Check vulnerabilities with existing patches
        if: ${{ matrix.audit == true }}
        run: |
          cargo install --locked cargo-audit
          ISSUES_WITHOUT_PATCHES=($(cargo audit --json | jq --raw-output '.vulnerabilities.list[] | select(.versions.patched | length == 0) | .advisory.id' | sed 's!^! --ignore !' | tr -d '\n'))
          cargo audit ${ISSUES_WITHOUT_PATCHES[@]}
      - name: Rustfmt
        if: ${{ matrix.rustfmt == true }}
        run: cargo "+${NIGHTLY_VERSION}" fmt --all -- --check
      - name: Check
        run: cargo check --locked --verbose --all-features --target=${{ matrix.target }}
      - name: Clippy
        run: cargo clippy
      - name: Test
        if: ${{ !matrix.no_test }}
        run: cargo test --locked --verbose --all-features --target=${{ matrix.target }}
      - name: Build
        run: cargo build --locked --verbose --all-features --release --target=${{ matrix.target }}
