on: [push, pull_request]

name: Continuous integration

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CI: 1
  RUSTFLAGS: "-D warnings -W bare-trait-objects"
  RUSTUP_MAX_RETRIES: 10

jobs:
  check:
    name: Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # GNU/Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            tests: true
#          - os: ubuntu-latest
#            target: x86_64-unknown-linux-musl
#            tests: true
#          - os: ubuntu-latest
#            target: armv7-unknown-linux-musleabihf
#          - os: ubuntu-latest
#            target: aarch64-unknown-linux-musl
#            tests: true
#            rustflags: -C link-arg=-lgcc # from https://github.com/rust-embedded/cross/blob/master/docker/Dockerfile.aarch64-unknown-linux-musl
#          - os: ubuntu-latest
#            target: arm-unknown-linux-musleabi
#            tests: true
#          - os: ubuntu-latest
#            target: mips-unknown-linux-musl
#            rustflags: --cfg openssl
#          - os: ubuntu-latest
#            target: x86_64-unknown-freebsd
#            cc: x86_64-unknown-freebsd12-gcc

          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
            tests: true
          - os: macos-latest
            target: aarch64-apple-darwin

#          # Windows
#          - os: windows-latest
#            target: x86_64-pc-windows-msvc
#            tests: true
#            rustflags: -C target-feature=+crt-static
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update
          rustup target list
          rustup target add ${{ matrix.target }}
          rustup install $(cat rust-toolchain)-${{ matrix.target }}
          rustup default $(cat rust-toolchain)-${{ matrix.target }}
          rustup component --toolchain $(cat rust-toolchain)-${{ matrix.target }} add rust-src
      - name: Build
        run: cargo build --locked --verbose --target=${{ matrix.target }}
