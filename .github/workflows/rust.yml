on: [push, pull_request]

name: Continuous integration

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CI: 1
  RUSTFLAGS: "-D warnings -W bare-trait-objects"
  RUSTUP_MAX_RETRIES: 10
  NIGHTLY_VERSION: "nightly-2023-02-09"

jobs:
  check:
    name: Check
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # GNU/Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            tests: true
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            tests: true

          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
            tests: true
          - os: macos-latest
            target: aarch64-apple-darwin

          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            tests: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        env:
          CC: ${{ matrix.cc }}
          RUSTFLAGS: ${{ matrix.rustflags }}
        run: |
          rustup update --no-self-update
          rustup target list
          rustup target add ${{ matrix.target }}
          rustup toolchain list
          rustup install "${NIGHTLY_VERSION}"
          rustup component add --toolchain "${NIGHTLY_VERSION}" rustfmt
          rustup install $(cat rust-toolchain)-${{ matrix.target }}
          rustup default $(cat rust-toolchain)-${{ matrix.target }}
          rustup component add clippy rust-src
      - name: Rustfmt
        run: cargo "+${NIGHTLY_VERSION}" rustfmt --all -- --check
      - name: Clippy
        run: cargo clippy
      - name: Test
        run: cargo test --locked --verbose --all-features --target=${{ matrix.target }}
      - name: Check
        run: cargo check --locked --verbose --all-features --target=${{ matrix.target }}
      - name: Build
        run: cargo build --locked --verbose --all-features --release --target=${{ matrix.target }}
